{"version":3,"sources":["Components/Constants.jsx","Components/Result.jsx","Components/NearRestaurant.jsx","Components/Collections.jsx","Components/Home.jsx","Redux/Actions/action.js","Redux/API/api.js","Redux/Saga/saga.js","Redux/Saga/index.js","Redux/Reducer/reducer.js","Redux/Reducer/index.js","Redux/store.js","App.js","serviceWorker.js","index.js"],"names":["ACCESSKEY","Result","props","showModal","setState","visible","state","this","style","width","Container","Row","Col","height","src","thumbnail","icon","title","cuisines","location","type","block","onClick","Badge","pill","variant","rating","centered","onOk","onCancel","restaurant","featured_image","name","marginTop","currency","average_cost_for_two","highlights","address","phone_numbers","timings","Component","NearRestaurant","restaurants","isLoaded","class","size","resultComponents","map","item","key","id","locality","user_rating","aggregate_rating","thumb","className","connect","console","log","reducer","collections","rows","reduce","index","push","length","row","col","hoverable","cover","alt","collection","image_url","description","Home","getCuisines","axios","get","Latitude","Longitude","headers","then","response","Cuisines","data","getCategories","Categories","categories","getLocation","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","getRestaurant","getCollection","error","code","message","enableHighAccuracy","timeout","maximumAge","placeholder","enterButton","span","loading","dispatch","payload","a","getCity","city","getRestaurantDetail","getCityDetail","getCollectionDetail","Saga","put","call","takeEvery","rootSaga","spawn","initialState","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","run","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6288162b.chunk.js","sourcesContent":["export const ACCESSKEY = '6b06f24d64eaceaf66d06298b0364a00';\n\n\n","import React, { Component } from 'react'\nimport { Button, Card, Image, Modal } from 'antd'\nimport { Row, Container, Col, Badge } from 'react-bootstrap'\nimport { MDBIcon } from \"mdbreact\";\n\nexport default class Result extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false\n        };\n    }\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    render() {\n        const { visible } = this.state\n        return (\n            <div >\n                <Card style={{ width: '60rem' }}>\n                    <Container>\n                        <Row>\n                            <Col>\n                                <Image\n                                    width={171}\n                                    height={200}\n                                    src={this.props.thumbnail} />\n\n\n                            </Col>\n                            <Col>\n\n                                <h2><MDBIcon icon=\"utensils\" /> &nbsp;  {this.props.title}</h2>\n                                <h5><MDBIcon icon=\"hamburger\" /> &nbsp; {this.props.cuisines}</h5>\n                                <h6><MDBIcon icon=\"map-marker-alt\" />&nbsp; {this.props.location}</h6>\n                                <Button type=\"link\" block onClick={this.showModal}> View Detail</Button>\n                            </Col>\n                            <Col>\n                                <br />\n                                <Badge pill variant=\"danger\">\n                                    <h3> <MDBIcon icon=\"star\" /> &nbsp; {this.props.rating}</h3>\n                                </Badge>\n                            </Col>\n\n                        </Row>\n                    </Container>\n                </Card>\n\n                <Modal\n                    title={this.props.title}\n                    centered\n                    visible={visible}\n                    onOk={() => this.setState({ visible: false })}\n                    onCancel={() => this.setState({ visible: false })}\n                    width={1200}\n                >\n                    <Row>\n                        <Col>\n                            <Image\n                                width={700}\n                                height={400}\n                                src={this.props.restaurant.featured_image} />\n                        </Col>\n                        <Col>\n                            <h1><MDBIcon icon=\"utensils\" /> &nbsp;  {this.props.restaurant.name}</h1>\n                            <h4><MDBIcon icon=\"hamburger\" /> &nbsp; {this.props.restaurant.cuisines}</h4>\n                            <div style={{ marginTop: '50px' }}>\n                                <h5>Average cost for two people</h5>\n                                <h5><MDBIcon icon=\"dollar-sign\" />&nbsp;{this.props.restaurant.currency} &nbsp; {this.props.restaurant.average_cost_for_two}</h5>\n                            </div>\n                            <div style={{ marginTop: '50px' }}>\n                                <h4>Highlights</h4>\n                                <h5><MDBIcon icon=\"hotel\" />&nbsp; {this.props.restaurant.highlights}</h5>\n                            </div>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <h5><MDBIcon icon=\"map-marker-alt\" />&nbsp; {this.props.restaurant.location.address}</h5>\n                            <h5><MDBIcon icon=\"mobile\" />&nbsp; {this.props.restaurant.phone_numbers}</h5>\n                            <h5><MDBIcon icon=\"clock\" />&nbsp; {this.props.restaurant.timings}</h5>\n                        </Col>\n                    </Row>\n                </Modal>\n                <br />\n                <br />\n            </div>\n        );\n    }\n}\n","import { Space, Spin } from 'antd';\nimport React, { Component } from 'react'\nimport Result from './Result'\n\nexport default class NearRestaurant extends Component {\n\n    render() {\n\n        let restaurants = this.props.restaurants;\n        let isLoaded = this.props.isLoaded;\n        if (!isLoaded) {\n            const resultComponents = restaurants.map((item) => (\n                \n                    <Result\n                        key={item.restaurant.id}\n                        restaurant={item.restaurant}\n                        title={item.restaurant.name}\n                        cuisines={item.restaurant.cuisines}\n                        location={item.restaurant.location.locality}\n                        rating={item.restaurant.user_rating.aggregate_rating}\n                        thumbnail={item.restaurant.thumb}\n                    />\n\n              \n            ));\n            return (\n                <div className=\"resultList\">\n\n                    {resultComponents}\n                </div>\n            );\n        }\n        else {\n            return (\n                <div class=\"col d-flex justify-content-left\">\n                <Space size=\"middle\">\n                    <Spin size=\"large\" />\n                </Space>\n                </div>\n            );\n        }\n    }\n}\n","\nimport { Card, Col, Row, Space, Spin } from 'antd';\nimport Meta from 'antd/lib/card/Meta';\nimport React from 'react';\nimport { connect } from 'react-redux'\n\n\nfunction Collections(props) {\n    let rows=[]\n    if (props.collections.collections) {\n         rows = props.collections.collections.reduce(function (rows, key, index) { \n            return (index % 3 === 0 ? rows.push([key]) \n              : rows[rows.length-1].push(key)) && rows;\n          }, []);\n        console.log('row',rows)\n    }\n\n\n    return (\n\n        props.collections.collections ?\n            rows.map((row) =>\n            <Row>\n                {row.map(col => (<Col>\n                    <Card\n                        hoverable\n                        style={{ width: 240 }}\n                        cover={<img alt=\"example\" src={col.collection.image_url} />}\n                    >\n                        <Meta title={col.collection.title} description={col.collection.description} />\n                    </Card>\n                </Col>))}\n            </Row>\n            ) :\n            <Space size=\"middle\">\n                <Spin size=\"large\" />\n            </Space>\n\n    )\n\n}\n\n\nconst mapStateToProps = (state) => {\n    console.log('state..', state.reducer.collections)\n    return {\n        collections: state.reducer.collections\n    };\n}\n\nexport default connect(mapStateToProps)(Collections)\n\n","import React, { Component } from 'react'\nimport axios from 'axios';\nimport { ACCESSKEY } from './Constants';\nimport NearRestaurant from './NearRestaurant';\nimport Collections from './Collections'\nimport '../App.css';\nimport Search from 'antd/lib/input/Search';\nimport { connect } from 'react-redux'\nimport { GET_RESTAURANT, GET_CITY, GET_COLLECTION } from '../Redux/Actions/action'\nimport { Col, Row } from 'antd';\n\nclass Home extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            Cuisines: [],\n            Categories: []\n        }\n    }\n\n    componentDidMount() {\n        this.getLocation();\n        console.log('collections', this.props.collections)\n    }\n\n    getLocation() {\n        navigator.geolocation.getCurrentPosition(\n            (position) => {\n                console.log(\"Latitude is :\", position.coords.latitude);\n                console.log(\"Longitude is :\", position.coords.longitude);\n\n                const data = { Latitude: position.coords.latitude, Longitude: position.coords.longitude }\n                this.props.getRestaurant(data)\n                this.props.getLocation(data)\n                this.props.getCollection(data)\n            },\n            function (error) {\n                console.error(\"Error Code = \" + error.code + \" - \" + error.message);\n            },\n            {\n                enableHighAccuracy: false,\n                timeout: 10000,\n                maximumAge: 10000\n            }\n        );\n    }\n\n    getCuisines = () => {\n        axios.get('https://developers.zomato.com/api/v2.1/cuisines?lat=' + this.state.Latitude + '&lon=' + this.state.Longitude, {\n            headers: { \"user-key\": ACCESSKEY }\n        }).then((response) => {\n            this.setState({\n                Cuisines: response.data.cuisines\n            })\n            console.log(this.state.Cuisines);\n        })\n    }\n\n    getCategories = () => {\n        axios.get('https://developers.zomato.com/api/v2.1/categories', {\n            headers: { \"user-key\": ACCESSKEY }\n        }).then((response) => {\n            this.setState({\n                Categories: response.data.categories\n            })\n        })\n        console.log(this.state.categories);\n    }\n\n    render() {\n        console.log('rest', this.props);\n        return (\n            <div>\n                <div class=\"contact-background-image\">\n                    <Search placeholder=\"input search text\" enterButton=\"Search\" size=\"large\" style={{ width: 500 }} />\n                </div>\n                <br />\n                <Row >\n                    <Col span={12}>\n                        <NearRestaurant restaurants={this.props.restaurants} isLoaded={this.props.loading} />\n                    </Col>\n                    <Col span ={12}>\n                        <Collections />\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.reducer.loading,\n        restaurants: state.reducer.restaurant,\n        collections: state.reducer.collections\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n    getRestaurant: (data) => dispatch({ type: GET_RESTAURANT, payload: data }),\n    getLocation: (data) => dispatch({ type: GET_CITY, payload: data }),\n    getCollection: (data) => dispatch({ type: GET_COLLECTION, payload: data })\n})\n\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","export const GET_RESTAURANT = 'GET_RESTAURANT'\nexport const SET_LOADING = \"SET_LOADING\"\nexport const RESTAURANT_RES = 'RESTAURANT_RES'\nexport const GET_LOCATION = 'GET_LOCATION'\nexport const LOCATION_RES= 'LOCATION_RES'\nexport const GET_CITY = 'GET_CITY'\nexport const CITY_RES = 'CITY_RES'\nexport const GET_COLLECTION = 'GET_COLLECTION'\nexport const COLLECTION_RES = 'COLLECTION_RES'","import axios from 'axios'\nconst ACCESSKEY = '6b06f24d64eaceaf66d06298b0364a00';\n\n\nexport const getRestaurant = async (payload) => {\n    try {\n        const restaurants = await axios.get('https://developers.zomato.com/api/v2.1/search?lat=' + payload.Latitude + '&lon=' + payload.Longitude, {\n            headers: { \"user-key\": ACCESSKEY }\n        });\n        return restaurants.data.restaurants\n    } catch (error) {\n        return console.error(error)\n    }\n}\n\nexport const getCity = async (payload) =>{\n    try{\n        const city = await axios.get('https://developers.zomato.com/api/v2.1/cities?lat=' + payload.Latitude + '&lon=' + payload.Longitude, {\n            headers: { \"user-key\": ACCESSKEY }\n        });\n        console.log(city.data);\n        return city.data\n    }\n    catch(error){\n        return console.error(error)\n    }\n}\n\nexport const getCollection= async(payload) => {\n    try{\n        const collection = await axios.get('https://developers.zomato.com/api/v2.1/collections?lat=' + payload.Latitude + '&lon=' + payload.Longitude, {\n            headers: { \"user-key\": ACCESSKEY }\n        });\n        console.log(collection.data);\n        return collection.data\n    }\n    catch(error){\n        return console.error(error)\n    }\n}\n\n","import { put, call, takeEvery } from 'redux-saga/effects'\n\nimport { SET_LOADING, GET_RESTAURANT, RESTAURANT_RES, GET_CITY,CITY_RES, COLLECTION_RES, GET_COLLECTION } from '../Actions/action'\n\nimport { getRestaurant,getCity,getCollection } from '../API/api'\n\nfunction* getRestaurantDetail({ payload }) {\n    yield put({ type: SET_LOADING })\n    const restaurant = yield call(getRestaurant, payload)\n    yield put({ type: RESTAURANT_RES, payload: restaurant })\n}\n\nfunction* getCityDetail({payload}){\n    console.log(payload)\n    const city = yield call(getCity, payload)\n    yield put({ type: CITY_RES, payload: city })\n}\n\nfunction* getCollectionDetail({payload}){\n    const collections = yield call(getCollection,payload)\n    yield put({ type: COLLECTION_RES, payload: collections })\n}\n\nexport default function* Saga() {\n    yield takeEvery(GET_RESTAURANT, getRestaurantDetail)\n    yield takeEvery(GET_CITY, getCityDetail)\n    yield takeEvery(GET_COLLECTION,getCollectionDetail)\n}","import { spawn } from 'redux-saga/effects'\n\nimport Saga from './saga'\n\nexport default function* rootSaga() {\n    console.log(\"Hello From Redux-Saga!\")\n    yield spawn(Saga)\n  }","import { RESTAURANT_RES, SET_LOADING, GET_RESTAURANT, GET_CITY, CITY_RES, GET_COLLECTION, COLLECTION_RES } from '../Actions/action'\n\nconst initialState = {\n    loading: false,\n    restaurant: [],\n    Latitude: 0,\n    Longitude: 0,\n    city: [],\n    collections: []\n}\n\nexport default (state = initialState, { type, payload }) => {\n\n    switch (type) {\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        case RESTAURANT_RES:\n            return {\n                ...state,\n                restaurant: payload,\n                loading: false,\n            }\n        case GET_RESTAURANT:\n            return {\n                ...state,\n                Latitude: payload.Latitude,\n                Longitude: payload.Longitude,\n            }\n        case GET_CITY:\n            return {\n                ...state,\n                Latitude: payload.Latitude,\n                Longitude: payload.Longitude,\n            }\n        case CITY_RES:\n            return {\n                ...state,\n                city: payload\n            }\n        case GET_COLLECTION:\n            return {\n                ...state,\n                Latitude: payload.Latitude,\n                Longitude: payload.Longitude,\n            }\n        case COLLECTION_RES:\n            return{\n                ...state,\n                collections: payload\n            }\n        default:\n            return state\n    }\n\n}","import { combineReducers } from 'redux'\n\nimport reducer from './reducer'\n\nexport default combineReducers({\n  reducer,\n})","import { createStore, applyMiddleware } from 'redux' \n\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootSaga from './Saga'\n\nimport rootReducer from './Reducer'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n  rootReducer,\n  {},\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n)\n\n// Run redux-saga\nsagaMiddleware.run(rootSaga)\n\nexport default store","import React from 'react';\nimport './App.css';\nimport Home from './Components/Home';\nimport { Provider } from 'react-redux'\nimport store from './Redux/store'\n\n\nfunction App() {\n  return (\n    <Provider store={store}>\n    <div className=\"App\">\n      <Home/>\n    </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport 'mdbreact/dist/css/mdb.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}